{"ast":null,"code":"import _classCallCheck from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/linwei/Web_Search_Application/pdf-search-react/src/components/Filter.js\";\nimport React from 'react';\nimport { Tree } from 'antd'; //const RadioGroup = Radio.Group;\n// export class Filter extends React.Component {\n//     state = {\n//         value: 1,\n//     }\n//\n//     onChange = (e) => {\n//         this.setState({\n//             value: e.target.value,\n//         });\n//         this.props.filterChange(e.target.value);\n//     }\n//\n//     render() {\n//         // const radioStyle = {\n//         //\n//         // };\n//         return (\n//             <RadioGroup onChange={this.onChange} value={this.state.value}>\n//                 <Radio className= 'Radio' value={1}>All</Radio>\n//                 <Radio className= 'Radio' value={2}>Title</Radio>\n//                 <Radio className= 'Radio' value={3}>Author</Radio>\n//                 <Radio className= 'Radio' value={4}>Conference</Radio>\n//                 <Radio className= 'Radio' value={5}>Year</Radio>\n//\n//\n//             </RadioGroup>\n//         );\n//     }\n// }\n\nvar TreeNode = Tree.TreeNode;\nvar treeData = [{\n  title: '0-0',\n  key: '0-0',\n  children: [{\n    title: '0-0-0',\n    key: '0-0-0',\n    children: [{\n      title: '0-0-0-0',\n      key: '0-0-0-0'\n    }, {\n      title: '0-0-0-1',\n      key: '0-0-0-1'\n    }, {\n      title: '0-0-0-2',\n      key: '0-0-0-2'\n    }]\n  }, {\n    title: '0-0-1',\n    key: '0-0-1',\n    children: [{\n      title: '0-0-1-0',\n      key: '0-0-1-0'\n    }, {\n      title: '0-0-1-1',\n      key: '0-0-1-1'\n    }, {\n      title: '0-0-1-2',\n      key: '0-0-1-2'\n    }]\n  }, {\n    title: '0-0-2',\n    key: '0-0-2'\n  }]\n}, {\n  title: '0-1',\n  key: '0-1',\n  children: [{\n    title: '0-1-0-0',\n    key: '0-1-0-0'\n  }, {\n    title: '0-1-0-1',\n    key: '0-1-0-1'\n  }, {\n    title: '0-1-0-2',\n    key: '0-1-0-2'\n  }]\n}, {\n  title: '0-2',\n  key: '0-2'\n}];\nexport var Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Filter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      expandedKeys: ['0-0-0', '0-0-1'],\n      autoExpandParent: true,\n      checkedKeys: ['0-0-0'],\n      selectedKeys: []\n    };\n\n    _this.onExpand = function (expandedKeys) {\n      console.log('onExpand', expandedKeys); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n      // or, you can remove all expanded children keys.\n\n      _this.setState({\n        expandedKeys: expandedKeys,\n        autoExpandParent: false\n      });\n    };\n\n    _this.onCheck = function (checkedKeys) {\n      console.log('onCheck', checkedKeys);\n\n      _this.setState({\n        checkedKeys: checkedKeys\n      });\n    };\n\n    _this.onSelect = function (selectedKeys, info) {\n      console.log('onSelect', info);\n\n      _this.setState({\n        selectedKeys: selectedKeys\n      });\n    };\n\n    _this.renderTreeNodes = function (data) {\n      return data.map(function (item) {\n        if (item.children) {\n          return React.createElement(TreeNode, {\n            title: item.title,\n            key: item.title,\n            dataRef: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, _this.renderTreeNodes(item.children));\n        }\n\n        return React.createElement(TreeNode, Object.assign({}, item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tree, {\n        checkable: true,\n        onExpand: this.onExpand,\n        expandedKeys: this.state.expandedKeys,\n        autoExpandParent: this.state.autoExpandParent,\n        onCheck: this.onCheck,\n        checkedKeys: this.state.checkedKeys,\n        onSelect: this.onSelect,\n        selectedKeys: this.state.selectedKeys,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.renderTreeNodes(treeData));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);","map":{"version":3,"sources":["/Users/linwei/Web_Search_Application/pdf-search-react/src/components/Filter.js"],"names":["React","Tree","TreeNode","treeData","title","key","children","Filter","state","expandedKeys","autoExpandParent","checkedKeys","selectedKeys","onExpand","console","log","setState","onCheck","onSelect","info","renderTreeNodes","data","map","item","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Tree  } from 'antd';\n\n//const RadioGroup = Radio.Group;\n\n// export class Filter extends React.Component {\n//     state = {\n//         value: 1,\n//     }\n//\n//     onChange = (e) => {\n//         this.setState({\n//             value: e.target.value,\n//         });\n//         this.props.filterChange(e.target.value);\n//     }\n//\n//     render() {\n//         // const radioStyle = {\n//         //\n//         // };\n//         return (\n//             <RadioGroup onChange={this.onChange} value={this.state.value}>\n//                 <Radio className= 'Radio' value={1}>All</Radio>\n//                 <Radio className= 'Radio' value={2}>Title</Radio>\n//                 <Radio className= 'Radio' value={3}>Author</Radio>\n//                 <Radio className= 'Radio' value={4}>Conference</Radio>\n//                 <Radio className= 'Radio' value={5}>Year</Radio>\n//\n//\n//             </RadioGroup>\n//         );\n//     }\n// }\nconst TreeNode = Tree.TreeNode;\n\nconst treeData = [{\n    title: '0-0',\n    key: '0-0',\n    children: [{\n        title: '0-0-0',\n        key: '0-0-0',\n        children: [\n            { title: '0-0-0-0', key: '0-0-0-0' },\n            { title: '0-0-0-1', key: '0-0-0-1' },\n            { title: '0-0-0-2', key: '0-0-0-2' },\n        ],\n    }, {\n        title: '0-0-1',\n        key: '0-0-1',\n        children: [\n            { title: '0-0-1-0', key: '0-0-1-0' },\n            { title: '0-0-1-1', key: '0-0-1-1' },\n            { title: '0-0-1-2', key: '0-0-1-2' },\n        ],\n    }, {\n        title: '0-0-2',\n        key: '0-0-2',\n    }],\n}, {\n    title: '0-1',\n    key: '0-1',\n    children: [\n        { title: '0-1-0-0', key: '0-1-0-0' },\n        { title: '0-1-0-1', key: '0-1-0-1' },\n        { title: '0-1-0-2', key: '0-1-0-2' },\n    ],\n}, {\n    title: '0-2',\n    key: '0-2',\n}];\n\nexport class Filter extends React.Component {\n    state = {\n        expandedKeys: ['0-0-0', '0-0-1'],\n        autoExpandParent: true,\n        checkedKeys: ['0-0-0'],\n        selectedKeys: [],\n    }\n\n    onExpand = (expandedKeys) => {\n        console.log('onExpand', expandedKeys);\n        // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n        // or, you can remove all expanded children keys.\n        this.setState({\n            expandedKeys,\n            autoExpandParent: false,\n        });\n    }\n\n    onCheck = (checkedKeys) => {\n        console.log('onCheck', checkedKeys);\n        this.setState({ checkedKeys });\n    }\n\n    onSelect = (selectedKeys, info) => {\n        console.log('onSelect', info);\n        this.setState({ selectedKeys });\n    }\n\n    renderTreeNodes = (data) => {\n        return data.map((item) => {\n            if (item.children) {\n                return (\n                    <TreeNode title={item.title} key={item.title} dataRef={item}>\n                        {this.renderTreeNodes(item.children)}\n                    </TreeNode>\n                );\n            }\n            return <TreeNode {...item} />;\n        });\n    }\n\n    render() {\n        return (\n            <Tree\n                checkable\n                onExpand={this.onExpand}\n                expandedKeys={this.state.expandedKeys}\n                autoExpandParent={this.state.autoExpandParent}\n                onCheck={this.onCheck}\n                checkedKeys={this.state.checkedKeys}\n                onSelect={this.onSelect}\n                selectedKeys={this.state.selectedKeys}\n            >\n                {this.renderTreeNodes(treeData)}\n            </Tree>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}