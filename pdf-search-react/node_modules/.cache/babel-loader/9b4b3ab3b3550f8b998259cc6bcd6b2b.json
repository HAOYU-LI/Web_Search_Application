{"ast":null,"code":"import _slicedToArray from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/linwei/Web_Search_Application/pdf-search-react/src/components/Main.js\";\nimport React from 'react';\nimport { Searchbar } from './Searchbar';\nimport { ItemList } from './ItemList';\nimport { Filter } from './Filter';\nimport { FilterTree } from './FilterTree';\nimport { API_ROOT, index_params, title_params, author_params, conference_params, year_params, word_priority } from '../constants';\nexport var Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userInput: [],\n      indexAll: {},\n      indexTitle: {},\n      indexAuthor: {},\n      indexConference: {},\n      indexYear: {},\n      wordPriority: {},\n      FilterOption: 1,\n      returnAuthor: [] // ids:[],\n\n    };\n\n    _this.loadIndexAll = function () {\n      return fetch(\"\".concat(API_ROOT, \"/\").concat(index_params, \".json\"), {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(function (data) {\n        //console.log(data);\n        _this.setState({\n          indexAll: data\n        });\n      }).catch(function (e) {\n        console.log(e.message);\n\n        _this.setState({\n          error: e.message\n        });\n      });\n    };\n\n    _this.loadWordPriority = function () {\n      return fetch(\"\".concat(API_ROOT, \"/\").concat(word_priority, \".json\"), {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(function (data) {\n        //console.log(data);\n        _this.setState({\n          wordPriority: data\n        });\n      }).catch(function (e) {\n        console.log(e.message);\n\n        _this.setState({\n          error: e.message\n        });\n      });\n    };\n\n    _this.loadIndexTitle = function () {\n      return fetch(\"\".concat(API_ROOT, \"/\").concat(title_params, \".json\"), {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(function (data) {\n        //console.log(data);\n        _this.setState({\n          indexTitle: data\n        });\n      }).catch(function (e) {\n        console.log(e.message);\n\n        _this.setState({\n          error: e.message\n        });\n      });\n    };\n\n    _this.loadIndexAuthor = function () {\n      return fetch(\"\".concat(API_ROOT, \"/\").concat(author_params, \".json\"), {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(function (data) {\n        //console.log(data);\n        _this.setState({\n          indexAuthor: data\n        });\n      }).catch(function (e) {\n        console.log(e.message);\n\n        _this.setState({\n          error: e.message\n        });\n      });\n    };\n\n    _this.loadIndexConference = function () {\n      return fetch(\"\".concat(API_ROOT, \"/\").concat(conference_params, \".json\"), {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(function (data) {\n        //console.log(data);\n        _this.setState({\n          indexConference: data\n        });\n      }).catch(function (e) {\n        console.log(e.message);\n\n        _this.setState({\n          error: e.message\n        });\n      });\n    };\n\n    _this.loadIndexYear = function () {\n      return fetch(\"\".concat(API_ROOT, \"/\").concat(year_params, \".json\"), {\n        method: 'GET'\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(function (data) {\n        //console.log(data);\n        _this.setState({\n          indexYear: data\n        });\n      }).catch(function (e) {\n        console.log(e.message);\n\n        _this.setState({\n          error: e.message\n        });\n      });\n    };\n\n    _this.searchByIndex = function (pdfIndex) {\n      console.log(_this.state.userInput);\n      var inputArray = _this.state.userInput;\n      var inputWordLength = _this.state.userInput.length;\n      var ids = []; // console.log(pdfIndex);\n\n      var cnt = new Map();\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = inputArray.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var word = _step.value;\n          console.log(word);\n\n          for (var k in pdfIndex) {\n            if (k.startsWith(word)) {\n              var _iteratorNormalCompletion3 = true;\n              var _didIteratorError3 = false;\n              var _iteratorError3 = undefined;\n\n              try {\n                for (var _iterator3 = pdfIndex[k].values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  var id = _step3.value;\n\n                  //console.log(id);\n                  if (cnt.has(id)) {\n                    cnt.set(id, cnt.get(id) + 1);\n                  } else {\n                    cnt.set(id, 1);\n                  }\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                    _iterator3.return();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n            }\n          }\n        } //console.log(cnt);\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      for (var i = inputWordLength + 2; i > 0; i--) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = cnt[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _ref3 = _step2.value;\n\n            var _ref2 = _slicedToArray(_ref3, 2);\n\n            var key = _ref2[0];\n            var value = _ref2[1];\n\n            if (value >= i) {\n              ids.push(key);\n              cnt.delete(key);\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } //console.log(ids);\n\n\n      return React.createElement(ItemList, {\n        ids: ids,\n        pageNum: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      });\n    };\n\n    _this.ListItem = function () {\n      console.log(_this.state.FilterOption);\n\n      switch (_this.state.FilterOption) {\n        case 1:\n          return _this.searchByIndex(_this.state.indexAll);\n          break;\n\n        case 2:\n          return _this.searchByIndex(_this.state.indexTitle);\n          break;\n\n        case 3:\n          return _this.searchByIndex(_this.state.indexAuthor);\n          break;\n\n        case 4:\n          return _this.searchByIndex(_this.state.indexConference);\n          break;\n\n        case 5:\n          return _this.searchByIndex(_this.state.indexYear);\n          break;\n      }\n    };\n\n    _this.handleSearch = function (value) {\n      _this.setState(function (prevState) {\n        return {\n          userInput: value\n        };\n      });\n    };\n\n    _this.getAuthorFilter = function (value) {\n      console.log(value);\n\n      _this.setState({\n        returnAuhtor: value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadIndexAll();\n      this.loadIndexTitle();\n      this.loadIndexAuthor();\n      this.loadIndexConference();\n      this.loadIndexYear();\n      this.loadWordPriority();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Searchbar, {\n        handleSearch: this.handleSearch,\n        dataSource: this.state.indexTitle,\n        wordFrequency: this.state.wordPriority,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"item-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"radio-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(FilterTree // filterChange={this.filterChange}\n      , {\n        input: this.state.userInput,\n        Index: this.state.indexAuthor,\n        getFilter: this.getAuthorFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), this.state.userInput.length == 0 ? null : React.createElement(\"div\", {\n        className: \"item-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, this.ListItem())));\n    }\n  }]);\n\n  return Main;\n}(React.Component);","map":{"version":3,"sources":["/Users/linwei/Web_Search_Application/pdf-search-react/src/components/Main.js"],"names":["React","Searchbar","ItemList","Filter","FilterTree","API_ROOT","index_params","title_params","author_params","conference_params","year_params","word_priority","Main","state","userInput","indexAll","indexTitle","indexAuthor","indexConference","indexYear","wordPriority","FilterOption","returnAuthor","loadIndexAll","fetch","method","then","response","ok","json","data","setState","catch","e","console","log","message","error","loadWordPriority","loadIndexTitle","loadIndexAuthor","loadIndexConference","loadIndexYear","searchByIndex","pdfIndex","inputArray","inputWordLength","length","ids","cnt","Map","values","word","k","startsWith","id","has","set","get","i","key","value","push","delete","ListItem","handleSearch","prevState","getAuthorFilter","returnAuhtor","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Searchbar } from  './Searchbar';\nimport { ItemList } from  './ItemList';\nimport { Filter } from  './Filter';\nimport { FilterTree } from  './FilterTree';\nimport {API_ROOT, index_params, title_params, author_params, conference_params, year_params, word_priority} from '../constants';\n\n\nexport class Main extends React.Component {\n\n    state={\n        userInput : [],\n        indexAll:{},\n        indexTitle:{},\n        indexAuthor:{},\n        indexConference:{},\n        indexYear:{},\n        wordPriority:{},\n        FilterOption: 1,\n        returnAuthor: [],\n        // ids:[],\n\n    }\n\n\n    componentWillMount() {\n        this.loadIndexAll();\n        this.loadIndexTitle();\n        this.loadIndexAuthor();\n        this.loadIndexConference();\n        this.loadIndexYear();\n        this.loadWordPriority();\n    }\n\n    loadIndexAll = () => {\n        return fetch(`${API_ROOT}/${index_params}.json`, {\n            method: 'GET',\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n        }).then((data) => {\n            //console.log(data);\n            this.setState({indexAll: data});\n\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({error: e.message});\n        });\n    }\n\n    loadWordPriority = () => {\n        return fetch(`${API_ROOT}/${word_priority}.json`, {\n            method: 'GET',\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n        }).then((data) => {\n            //console.log(data);\n            this.setState({wordPriority: data});\n\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({error: e.message});\n        });\n    }\n\n    loadIndexTitle = () => {\n        return fetch(`${API_ROOT}/${title_params}.json`, {\n            method: 'GET',\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n        }).then((data) => {\n            //console.log(data);\n            this.setState({indexTitle: data});\n\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({error: e.message});\n        });\n    }\n\n    loadIndexAuthor = () => {\n        return fetch(`${API_ROOT}/${author_params}.json`, {\n            method: 'GET',\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n        }).then((data) => {\n            //console.log(data);\n            this.setState({indexAuthor: data});\n\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({error: e.message});\n        });\n    }\n    loadIndexConference = () => {\n        return fetch(`${API_ROOT}/${conference_params}.json`, {\n            method: 'GET',\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n        }).then((data) => {\n            //console.log(data);\n            this.setState({indexConference: data});\n\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({error: e.message});\n        });\n    }\n    loadIndexYear = () => {\n        return fetch(`${API_ROOT}/${year_params}.json`, {\n            method: 'GET',\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n        }).then((data) => {\n            //console.log(data);\n            this.setState({indexYear: data});\n\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({error: e.message});\n        });\n    }\n\n\n\n    searchByIndex= (pdfIndex) =>{\n        console.log(this.state.userInput);\n        const inputArray = this.state.userInput;\n        const inputWordLength = this.state.userInput.length;\n        const ids = [];\n        // console.log(pdfIndex);\n        const cnt =  new Map();\n\n\n        for(let word of inputArray.values()){\n            console.log(word);\n            for(let k in pdfIndex){\n                if (k.startsWith(word)){\n                    for(let id of pdfIndex[k].values()){\n                        //console.log(id);\n                        if(cnt.has(id)){\n                            cnt.set(id,cnt.get(id)+1);\n                        }\n                        else{\n                            cnt.set(id,1);\n                        }\n                    }\n                }\n            }\n        }\n        //console.log(cnt);\n        for( let i = inputWordLength+2; i>0;i--){\n            for(let [key, value] of cnt){\n                if(value >= i){\n                    ids.push(key);\n                    cnt.delete(key);\n                }\n            }\n        }\n        //console.log(ids);\n        return <ItemList ids ={ids} pageNum = {1}/>\n    }\n\n    ListItem = () => {\n        console.log(this.state.FilterOption);\n        switch (this.state.FilterOption) {\n            case 1:\n                return this.searchByIndex(this.state.indexAll);\n                break;\n            case 2:\n                return this.searchByIndex(this.state.indexTitle);\n                break;\n            case 3:\n                return this.searchByIndex(this.state.indexAuthor);\n                break;\n            case 4:\n                return this.searchByIndex(this.state.indexConference);\n                break;\n            case 5:\n                return this.searchByIndex(this.state.indexYear);\n                break;\n\n        }\n    }\n\n\n\n\n    handleSearch = (value) => {\n        this.setState((prevState) => {\n            return{\n                userInput : value\n            };\n        });\n    }\n\n    // filterChange = (value) => {\n    //\n    //     this.setState((prevState) => {\n    //         return{\n    //             FilterOption : value\n    //         };\n    //     });\n    //\n    // }\n\n    getAuthorFilter = (value) =>{\n        console.log(value);\n        this.setState({returnAuhtor:value});\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"main\">\n\n                <Searchbar handleSearch={this.handleSearch} dataSource = {this.state.indexTitle} wordFrequency = {this.state.wordPriority}/>\n                <div className=\"item-section\">\n                    <nav className = \"radio-group\">\n                        <FilterTree\n                           // filterChange={this.filterChange}\n                            input = {this.state.userInput}\n                            Index = {this.state.indexAuthor}\n                            getFilter = {this.getAuthorFilter}\n                        />\n                    </nav>\n                    {(this.state.userInput.length == 0 )\n                        ? null :\n                        <div className=\"item-list\">{this.ListItem()}</div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}