{"ast":null,"code":"import _classCallCheck from \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/src/components/Searchbar.js\";\nimport React from 'react';\nimport { QElement, PriorityQueue } from './PriorityQueue';\nimport { Icon, Input, AutoComplete } from 'antd'; // const Search = Input.Search;\n\nvar Option = AutoComplete.Option;\n\nfunction startWith(k, value) {\n  if (k.length >= value.length) {\n    return k.startsWith(value);\n  }\n\n  return false;\n}\n\nexport var Searchbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Searchbar, _React$Component);\n\n  function Searchbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Searchbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Searchbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userInput: 'Input search text',\n      dataSource: [],\n      wordFrequency: {}\n    };\n\n    _this.searchResult = function (value) {\n      /*let count = 0;\n      const result = [];\n      const dataSource = this.props.dataSource;\n      for (let k in dataSource) {\n          if (startWith(k, value)) {\n              result.push(k)\n              count += 1;\n          }\n           if (count >= 8) {\n              break;\n          }\n      }\n       return result;*/\n      var count = 0;\n      var result = [];\n      var wordFrequency = _this.props.wordFrequency;\n      console.log(wordFrequency);\n      var keys = Object.keys(foo);\n      var pq = new PriorityQueue();\n\n      for (var i = 0; i < wordFrequency.length; i++) {\n        var key = Object.keys(wordFrequency[i]);\n\n        if (startWith(key, value)) {\n          pq.enqueue(key, wordFrequency[i].get(key));\n        }\n      }\n\n      while (!pq.isEmpty() && count <= 10) {\n        result.push();\n      }\n    };\n\n    _this.onInputChange = function (value) {\n      console.log(value);\n\n      _this.setState({\n        userInput: value\n      });\n\n      _this.setState({\n        dataSource: !value ? [] : _this.searchResult(value)\n      });\n    };\n\n    _this.onSearch = function () {\n      console.log(_this.state.userInput);\n\n      var strContent = _this.state.userInput.toLocaleLowerCase().trim().split(/\\s+/); //console.log(strContent);\n\n\n      _this.props.handleSearch(strContent);\n    };\n\n    _this.onSelect = function (value) {\n      console.log(\"select\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Searchbar, [{\n    key: \"render\",\n    value: function render() {\n      var dataIndex = this.props.datasource; //\n      // const options = dataIndex.map(item => (\n      //\n      //     <Option className=\"show-all\" key={item.index} value={\"word\"} >\n      //         <p>\n      //             {item.key}\n      //         </p>\n      //     </Option>\n      //     )\n      // );\n\n      return React.createElement(\"div\", {\n        className: \"search_button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(AutoComplete, {\n        className: \"certain-category-search\",\n        dropdownClassName: \"certain-category-search-dropdown\",\n        dropdownmatchselectwidth: true,\n        size: \"large\",\n        dataSource: this.state.dataSource,\n        placeholder: this.state.userInput,\n        optionLabelProp: \"value\",\n        onSelect: this.onSelect,\n        onChange: this.onInputChange,\n        onSearch: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Input, {\n        suffix: React.createElement(Icon, {\n          onClick: this.onSearch,\n          type: \"search\",\n          className: \"certain-category-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Searchbar;\n}(React.Component);\n{\n  /*<Search*/\n}\n{\n  /*placeholder= {this.state.userInput}*/\n}\n{\n  /*enterButton=\"Search\"*/\n}\n{\n  /*size=\"large\"*/\n}\n{\n  /*onChange = {this.onInputChange}*/\n}\n{\n  /*onSearch ={this.on_search}*/\n}\n{\n  /*/>*/\n}","map":{"version":3,"sources":["/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/src/components/Searchbar.js"],"names":["React","QElement","PriorityQueue","Icon","Input","AutoComplete","Option","startWith","k","value","length","startsWith","Searchbar","state","userInput","dataSource","wordFrequency","searchResult","count","result","props","console","log","keys","Object","foo","pq","i","key","enqueue","get","isEmpty","push","onInputChange","setState","onSearch","strContent","toLocaleLowerCase","trim","split","handleSearch","onSelect","dataIndex","datasource","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {QElement, PriorityQueue} from './PriorityQueue';\nimport { Icon, Input, AutoComplete } from 'antd';\n\n// const Search = Input.Search;\nconst Option = AutoComplete.Option;\n\n\nfunction startWith(k, value) {\n    if (k.length >= value.length) {\n        return k.startsWith(value);\n    }\n    return false;\n}\n\nexport class Searchbar extends React.Component {\n    state= {\n        userInput : 'Input search text',\n        dataSource: [],\n        wordFrequency : {}\n    };\n\n\n\n    searchResult = (value) => {\n        /*let count = 0;\n        const result = [];\n        const dataSource = this.props.dataSource;\n        for (let k in dataSource) {\n            if (startWith(k, value)) {\n                result.push(k)\n                count += 1;\n            }\n\n            if (count >= 8) {\n                break;\n            }\n        }\n\n        return result;*/\n        let count = 0;\n        const result = [];\n        const wordFrequency = this.props.wordFrequency;\n        console.log(wordFrequency);\n        var keys = Object.keys(foo);\n        var pq = new PriorityQueue();\n        for (let i = 0; i < wordFrequency.length; i ++) {\n            let key = Object.keys(wordFrequency[i]);\n            if (startWith(key, value)) {\n                pq.enqueue(key, wordFrequency[i].get(key));\n            }\n        }\n\n        while(!pq.isEmpty() && count <= 10) {\n            result.push()\n        }\n\n\n    }\n\n\n    onInputChange = (value) =>{\n        console.log(value);\n        this.setState({userInput : value});\n        this.setState({\n            dataSource: !value ? [] : this.searchResult(value)\n        });\n    }\n\n    onSearch = () =>  {\n        console.log(this.state.userInput);\n        const strContent = this.state.userInput.toLocaleLowerCase().trim().split(/\\s+/);\n        //console.log(strContent);\n        this.props.handleSearch(strContent);\n\n    }\n\n    onSelect = (value) =>{\n        console.log(\"select\");\n    }\n\n\n\n\n    render() {\n        const dataIndex =  this.props.datasource;\n\n\n        //\n        // const options = dataIndex.map(item => (\n        //\n        //     <Option className=\"show-all\" key={item.index} value={\"word\"} >\n        //         <p>\n        //             {item.key}\n        //         </p>\n        //     </Option>\n        //     )\n        // );\n\n\n        return (\n\n            <div className=\"search_button\">\n                <AutoComplete\n                    className=\"certain-category-search\"\n                    dropdownClassName=\"certain-category-search-dropdown\"\n                    dropdownmatchselectwidth={true}\n                    size=\"large\"\n                    dataSource={this.state.dataSource}\n                    placeholder={this.state.userInput}\n                    optionLabelProp=\"value\"\n                    onSelect={this.onSelect}\n                    onChange={this.onInputChange}\n                    onSearch={this.handleSearch}\n                >\n                    <Input  suffix={<Icon onClick={this.onSearch} type=\"search\" className=\"certain-category-icon\" />} />\n                </AutoComplete>\n            </div>\n        );\n    }\n}\n\n\n\n{/*<Search*/}\n{/*placeholder= {this.state.userInput}*/}\n{/*enterButton=\"Search\"*/}\n{/*size=\"large\"*/}\n{/*onChange = {this.onInputChange}*/}\n\n{/*onSearch ={this.on_search}*/}\n{/*/>*/}\n"]},"metadata":{},"sourceType":"module"}