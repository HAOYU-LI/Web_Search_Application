{"ast":null,"code":"import _classCallCheck from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/linwei/Web_Search_Application/pdf-search-react/src/components/FilterTreeAuthor.js\";\nimport React from 'react';\nimport { Tree } from 'antd';\nvar TreeNode = Tree.TreeNode;\nvar AuthorData = [{\n  title: 'author',\n  key: 'author',\n  children: [{\n    title: 'michael',\n    key: '2014'\n  }, {\n    title: 'bryan',\n    key: 'bryan'\n  }, {\n    title: 'shmuel ',\n    key: 'shmuel'\n  }, {\n    title: 'david',\n    key: 'david'\n  }, {\n    title: 'ivan',\n    key: 'ivan'\n  }, {\n    title: 'marcus',\n    key: 'marcus'\n  }, {\n    title: 'deva',\n    key: 'deva'\n  }, {\n    title: 'aude',\n    key: '2018'\n  }, {\n    title: 'walter',\n    key: 'walter'\n  }, {\n    title: 'ramin',\n    key: 'ramin'\n  }, {\n    title: 'eric',\n    key: 'eric'\n  }, {\n    title: 'william',\n    key: 'william'\n  }, {\n    title: 'ryan',\n    key: 'ryan'\n  }, {\n    title: 'peter',\n    key: 'peter'\n  }]\n}];\nexport var FilterTreeAuthor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterTreeAuthor, _React$Component);\n\n  function FilterTreeAuthor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilterTreeAuthor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilterTreeAuthor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      expandedKeys: [],\n      autoExpandParent: true,\n      checkedKeys: [],\n      selectedKeys: []\n    };\n\n    _this.onExpand = function (expandedKeys) {\n      console.log('onExpand', expandedKeys); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n      // or, you can remove all expanded children keys.\n\n      _this.setState(function (prevState) {\n        return {\n          expandedKeys: expandedKeys,\n          autoExpandParent: false\n        };\n      });\n    };\n\n    _this.onCheck = function (checkedKeys) {\n      //console.log('onCheck', checkedKeys);\n      _this.setState(function (prevState) {\n        return {\n          checkedKeys: checkedKeys\n        };\n      });\n\n      _this.props.getFilter(checkedKeys);\n    };\n\n    _this.onSelect = function (selectedKeys, info) {\n      console.log('onSelect', info);\n\n      _this.setState({\n        selectedKeys: selectedKeys\n      });\n    };\n\n    _this.renderTreeNodes = function (data) {\n      return data.map(function (item) {\n        if (item.children) {\n          return React.createElement(TreeNode, {\n            title: item.title,\n            key: item.title,\n            dataRef: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, _this.renderTreeNodes(item.children));\n        }\n\n        return React.createElement(TreeNode, Object.assign({}, item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FilterTreeAuthor, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tree, {\n        checkable: true,\n        onExpand: this.onExpand,\n        expandedKeys: this.state.expandedKeys,\n        autoExpandParent: this.state.autoExpandParent,\n        onCheck: this.onCheck,\n        checkedKeys: this.state.checkedKeys,\n        onSelect: this.onSelect,\n        selectedKeys: this.state.selectedKeys,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.renderTreeNodes(AuthorData));\n    }\n  }]);\n\n  return FilterTreeAuthor;\n}(React.Component);","map":{"version":3,"sources":["/Users/linwei/Web_Search_Application/pdf-search-react/src/components/FilterTreeAuthor.js"],"names":["React","Tree","TreeNode","AuthorData","title","key","children","FilterTreeAuthor","state","expandedKeys","autoExpandParent","checkedKeys","selectedKeys","onExpand","console","log","setState","prevState","onCheck","props","getFilter","onSelect","info","renderTreeNodes","data","map","item","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Tree  } from 'antd';\n\nconst TreeNode = Tree.TreeNode;\n\n\n\n\n\n\nconst AuthorData = [{\n    title: 'author',\n    key: 'author',\n    children: [{\n        title: 'michael',\n        key: '2014',\n    },\n        {\n            title: 'bryan',\n            key: 'bryan',\n        },\n        {\n            title: 'shmuel ',\n            key: 'shmuel',\n        },\n        {\n            title: 'david',\n            key: 'david',\n        },\n        {\n            title: 'ivan',\n            key: 'ivan',\n        },\n        {\n            title: 'marcus',\n            key: 'marcus',\n        },\n        {\n            title: 'deva',\n            key: 'deva',\n        },\n        {\n            title: 'aude',\n            key: '2018',\n        },\n        {\n            title: 'walter',\n            key: 'walter',\n        },\n        {\n            title: 'ramin',\n            key: 'ramin',\n        },\n        {\n            title: 'eric',\n            key: 'eric',\n        },\n        {\n            title: 'william',\n            key: 'william',\n        },\n        {\n            title: 'ryan',\n            key: 'ryan',\n        },\n        {\n            title:'peter',\n            key: 'peter',\n        },\n\n\n    ],\n},\n];\n\n\n\n\nexport class FilterTreeAuthor extends React.Component {\n    state = {\n        expandedKeys: [],\n        autoExpandParent: true,\n        checkedKeys: [],\n        selectedKeys: [],\n    }\n\n\n\n    onExpand = (expandedKeys) => {\n        console.log('onExpand', expandedKeys);\n        // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n        // or, you can remove all expanded children keys.\n        this.setState((prevState)=>{\n            return {\n                expandedKeys:expandedKeys,\n                autoExpandParent: false,\n            };\n        });\n    }\n\n\n\n    onCheck = (checkedKeys) => {\n        //console.log('onCheck', checkedKeys);\n        this.setState((prevState)=>{\n            return {\n                checkedKeys: checkedKeys,\n            }\n        });\n        this.props.getFilter(checkedKeys);\n    }\n\n\n    onSelect = (selectedKeys, info) => {\n        console.log('onSelect', info);\n        this.setState({ selectedKeys });\n    }\n\n    renderTreeNodes = (data) => {\n        return data.map((item) => {\n            if (item.children) {\n                return (\n                    <TreeNode title={item.title} key={item.title} dataRef={item}>\n                        {this.renderTreeNodes(item.children)}\n                    </TreeNode>\n                );\n            }\n            return <TreeNode {...item} />;\n        });\n    }\n\n\n\n\n\n\n\n    render() {\n\n\n\n\n        return (\n            <Tree\n                checkable\n                onExpand={this.onExpand}\n                expandedKeys={this.state.expandedKeys}\n                autoExpandParent={this.state.autoExpandParent}\n                onCheck={this.onCheck}\n                checkedKeys={this.state.checkedKeys}\n                onSelect={this.onSelect}\n                selectedKeys={this.state.selectedKeys}\n            >\n\n                {this.renderTreeNodes(AuthorData) }\n\n\n\n            </Tree>\n\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}