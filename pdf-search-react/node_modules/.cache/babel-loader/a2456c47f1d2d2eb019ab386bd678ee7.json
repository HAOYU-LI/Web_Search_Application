{"ast":null,"code":"import _classCallCheck from \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/src/components/Searchbar.js\";\nimport React from 'react';\nimport { Input } from 'antd'; // eslint-disable-next-line\n\nimport { Autosuggest } from 'react-autosuggest';\nvar Search = Input.Search;\n/*export class Searchbar extends React.Component {\n    state= {\n        userInput : 'Input search text',\n    };\n\n    onInputChange = (e) =>{\n        this.setState({userInput : e.target.value});\n    }\n\n    on_search = () =>  {\n        console.log(this.state.userInput);\n        const strContent = this.state.userInput.toLocaleLowerCase().trim().split(/\\s+/);\n        //console.log(strContent);\n        this.props.handleSearch(strContent);\n    }\n\n    render() {\n        return (\n            <div className = 'search_button'>\n                <Search\n                    placeholder= {this.state.userInput}\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onChange = {this.onInputChange}\n                    onSearch ={this.on_search}\n                />\n            </div>\n        );\n    }\n}*/\n\nvar _antd = antd,\n    AutoComplete = _antd.AutoComplete;\n\nfunction onSelect(value) {\n  console.log('onSelect', value);\n}\n\nvar Complete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Complete, _React$Component);\n\n  function Complete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Complete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Complete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dataSource: ['a', 'aa', 'aaa']\n    };\n\n    _this.handleSearch = function (value) {\n      _this.setState({\n        dataSource: !value ? [] : [value, value + value, value + value + value]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Complete, [{\n    key: \"render\",\n    value: function render() {\n      var dataSource = this.state.dataSource;\n      return React.createElement(AutoComplete, {\n        dataSource: dataSource,\n        style: {\n          width: 200\n        },\n        onSelect: onSelect,\n        onSearch: this.handleSearch,\n        placeholder: \"input here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Complete;\n}(React.Component);","map":{"version":3,"sources":["/Users/lihaoyu/Documents/USC/INF551/project/Web_Search_Application/pdf-search-react/src/components/Searchbar.js"],"names":["React","Input","Autosuggest","Search","antd","AutoComplete","onSelect","value","console","log","Complete","state","dataSource","handleSearch","setState","width","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB,C,CACA;;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AAEA,IAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA+ByBC,I;IAAjBC,Y,SAAAA,Y;;AAER,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACH;;IAEKG,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ;AADR,K;;UAIRC,Y,GAAe,UAACN,KAAD,EAAW;AACtB,YAAKO,QAAL,CAAc;AACVF,QAAAA,UAAU,EAAE,CAACL,KAAD,GAAS,EAAT,GAAc,CACtBA,KADsB,EAEtBA,KAAK,GAAGA,KAFc,EAGtBA,KAAK,GAAGA,KAAR,GAAgBA,KAHM;AADhB,OAAd;AAOH,K;;;;;;;6BAIQ;AAAA,UACGK,UADH,GACkB,KAAKD,KADvB,CACGC,UADH;AAEL,aACI,oBAAC,YAAD;AACI,QAAA,UAAU,EAAEA,UADhB;AAEI,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAFX;AAGI,QAAA,QAAQ,EAAET,QAHd;AAII,QAAA,QAAQ,EAAE,KAAKO,YAJnB;AAKI,QAAA,WAAW,EAAC,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AASH;;;;EA5BkBb,KAAK,CAACgB,S","sourcesContent":["import React from 'react';\nimport { Input } from 'antd';\n// eslint-disable-next-line\nimport {Autosuggest} from 'react-autosuggest';\n\nconst Search = Input.Search;\n\n\n/*export class Searchbar extends React.Component {\n    state= {\n        userInput : 'Input search text',\n    };\n\n    onInputChange = (e) =>{\n        this.setState({userInput : e.target.value});\n    }\n\n    on_search = () =>  {\n        console.log(this.state.userInput);\n        const strContent = this.state.userInput.toLocaleLowerCase().trim().split(/\\s+/);\n        //console.log(strContent);\n        this.props.handleSearch(strContent);\n    }\n\n    render() {\n        return (\n            <div className = 'search_button'>\n                <Search\n                    placeholder= {this.state.userInput}\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onChange = {this.onInputChange}\n                    onSearch ={this.on_search}\n                />\n            </div>\n        );\n    }\n}*/\n\nconst { AutoComplete } = antd;\n\nfunction onSelect(value) {\n    console.log('onSelect', value);\n}\n\nclass Complete extends React.Component {\n    state = {\n        dataSource: ['a', 'aa', 'aaa'],\n    }\n\n    handleSearch = (value) => {\n        this.setState({\n            dataSource: !value ? [] : [\n                value,\n                value + value,\n                value + value + value,\n            ],\n        });\n    }\n\n\n\n    render() {\n        const { dataSource } = this.state;\n        return (\n            <AutoComplete\n                dataSource={dataSource}\n                style={{ width: 200 }}\n                onSelect={onSelect}\n                onSearch={this.handleSearch}\n                placeholder=\"input here\"\n            />\n        );\n    }\n\n    \n}\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}