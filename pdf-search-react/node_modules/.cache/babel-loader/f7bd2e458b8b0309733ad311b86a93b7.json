{"ast":null,"code":"import _classCallCheck from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/linwei/Web_Search_Application/pdf-search-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/linwei/Web_Search_Application/pdf-search-react/src/components/Searchbar.js\";\nimport React from 'react';\nimport { QElement } from './PriorityQueue';\nimport { Icon, Input, AutoComplete } from 'antd';\nimport PriorityQueue from 'js-priority-queue'; // const Search = Input.Search;\n\nvar Option = AutoComplete.Option;\n\nfunction startWith(k, value) {\n  if (k.length >= value.length) {\n    return k.startsWith(value);\n  }\n\n  return false;\n}\n\nexport var Searchbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Searchbar, _React$Component);\n\n  function Searchbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Searchbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Searchbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userInput: 'Input search text',\n      dataSource: [],\n      wordFrequency: []\n    };\n\n    _this.searchResult = function (value) {\n      /*\n      let count = 0;\n      const result = [];\n      const dataSource = this.props.dataSource;\n      console.log(dataSource);\n      for (let k in dataSource) {\n          if (startWith(k, value)) {\n              result.push(k)\n              count += 1;\n          }\n           if (count >= 8) {\n              break;\n          }\n      }\n      return result;\n      */\n      // PriorityQueue implementation with spark word count\n      var result = [];\n      var wordFrequency = _this.props.wordFrequency; //  console.log(wordFrequency);\n\n      var pq = new PriorityQueue({\n        comparator: function comparator(a, b) {\n          return b.priority - a.priority;\n        },\n        strategy: PriorityQueue.BHeapStrategy\n      });\n\n      for (var i = 0; i < wordFrequency.length; i++) {\n        var pair = wordFrequency[i].split(':');\n        var element = pair[0];\n        var priority = parseInt(pair[1]);\n\n        if (startWith(element.toLocaleLowerCase(), value)) {\n          //  console.log(element);\n          pq.queue(new QElement(element.toLocaleLowerCase(), priority));\n        }\n      }\n\n      var count = 1;\n\n      while (pq.length > 0 && count <= 10) {\n        var PQele = pq.dequeue();\n        result.push(PQele.element); //result.push({key:count,value: PQele.element});\n\n        count++;\n      } //console.log(result);\n\n\n      return result;\n    };\n\n    _this.onInputChange = function (value) {\n      // console.log(value);\n      _this.setState({\n        userInput: value\n      });\n\n      _this.setState({\n        dataSource: !value ? [] : _this.searchResult(value)\n      }); //console.log(this.searchResult(value))\n\n    };\n\n    _this.onSearch = function () {\n      console.log(_this.state.userInput);\n\n      var strContent = _this.state.userInput.toLocaleLowerCase().trim().split(/\\s+/); //console.log(strContent);\n\n\n      _this.props.handleSearch(strContent);\n    };\n\n    _this.onSelect = function (value) {\n      console.log(\"select\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Searchbar, [{\n    key: \"render\",\n    // onMap = (result)=>{\n    //     return result.map(\n    //         (item) => {\n    //\n    //             return(\n    //                 <Option className=\"show-all\" key={item.key} value={item.value} >\n    //                     <p>\n    //                         {item.value}\n    //                     </p>\n    //                 </Option>\n    //             )\n    //\n    //     })\n    //\n    //\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"search_button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(AutoComplete, {\n        className: \"certain-category-search\",\n        dropdownClassName: \"certain-category-search-dropdown\",\n        dropdownmatchselectwidth: true,\n        size: \"large\",\n        dataSource: this.state.dataSource,\n        placeholder: this.state.userInput,\n        optionLabelProp: \"value\",\n        onSelect: this.onSelect,\n        onChange: this.onInputChange,\n        onSearch: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        onClick: this.onSearch,\n        type: \"search\",\n        className: \"certain-category-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Searchbar;\n}(React.Component);","map":{"version":3,"sources":["/Users/linwei/Web_Search_Application/pdf-search-react/src/components/Searchbar.js"],"names":["React","QElement","Icon","Input","AutoComplete","PriorityQueue","Option","startWith","k","value","length","startsWith","Searchbar","state","userInput","dataSource","wordFrequency","searchResult","result","props","pq","comparator","a","b","priority","strategy","BHeapStrategy","i","pair","split","element","parseInt","toLocaleLowerCase","queue","count","PQele","dequeue","push","onInputChange","setState","onSearch","console","log","strContent","trim","handleSearch","onSelect","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {QElement} from './PriorityQueue';\nimport { Icon, Input, AutoComplete } from 'antd';\nimport PriorityQueue from 'js-priority-queue';\n\n// const Search = Input.Search;\nconst Option = AutoComplete.Option;\n\n\nfunction startWith(k, value) {\n    if (k.length >= value.length) {\n        return k.startsWith(value);\n    }\n    return false;\n}\n\nexport class Searchbar extends React.Component {\n    state= {\n        userInput : 'Input search text',\n        dataSource: [],\n        wordFrequency : [],\n    };\n\n\n\n    searchResult = (value) => {\n        /*\n        let count = 0;\n        const result = [];\n        const dataSource = this.props.dataSource;\n        console.log(dataSource);\n        for (let k in dataSource) {\n            if (startWith(k, value)) {\n                result.push(k)\n                count += 1;\n            }\n\n            if (count >= 8) {\n                break;\n            }\n        }\n        return result;\n        */\n\n        // PriorityQueue implementation with spark word count\n        const result = [];\n        const wordFrequency = this.props.wordFrequency;\n      //  console.log(wordFrequency);\n        const pq = new PriorityQueue({ comparator: function(a, b) { return b.priority - a.priority; }, strategy: PriorityQueue.BHeapStrategy});\n        for (let i = 0; i < wordFrequency.length; i ++) {\n            let pair = wordFrequency[i].split(':');\n            let element = pair[0];\n            let priority = parseInt(pair[1]);\n            if (startWith(element.toLocaleLowerCase(), value)) {\n             //  console.log(element);\n                pq.queue(new QElement(element.toLocaleLowerCase(), priority));\n            }\n        }\n\n        let count = 1;\n        while(pq.length > 0 && count <= 10) {\n            let PQele = pq.dequeue();\n            result.push(PQele.element );\n            //result.push({key:count,value: PQele.element});\n            count ++;\n        }\n        //console.log(result);\n\n        return result;\n\n        }\n\n\n\n\n    onInputChange = (value) =>{\n       // console.log(value);\n        this.setState({userInput : value});\n        this.setState({\n            dataSource: !value ? [] : this.searchResult(value)\n        });\n        //console.log(this.searchResult(value))\n    }\n\n    onSearch = () =>  {\n        console.log(this.state.userInput);\n        const strContent = this.state.userInput.toLocaleLowerCase().trim().split(/\\s+/);\n        //console.log(strContent);\n        this.props.handleSearch(strContent);\n\n    }\n\n    onSelect = (value) =>{\n        console.log(\"select\");\n    }\n\n    // onMap = (result)=>{\n    //     return result.map(\n    //         (item) => {\n    //\n    //             return(\n    //                 <Option className=\"show-all\" key={item.key} value={item.value} >\n    //                     <p>\n    //                         {item.value}\n    //                     </p>\n    //                 </Option>\n    //             )\n    //\n    //     })\n    //\n    //\n    // }\n\n\n\n\n    render() {\n\n\n\n\n\n        return (\n\n            <div className=\"search_button\">\n                <AutoComplete\n                    className=\"certain-category-search\"\n                    dropdownClassName=\"certain-category-search-dropdown\"\n                    dropdownmatchselectwidth={true}\n                    size=\"large\"\n                    dataSource={this.state.dataSource}\n                    placeholder={this.state.userInput}\n                    optionLabelProp=\"value\"\n                    onSelect={this.onSelect}\n                    onChange={this.onInputChange}\n                    onSearch={this.handleSearch}\n                >\n                </AutoComplete>\n                <Icon onClick={this.onSearch} type=\"search\" className=\"certain-category-icon\" />\n            </div>\n        );\n    }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}